// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ILS
extern "C" SEXP ILS(arma::cube X, arma::mat A_init, arma::mat B_init, int max_iters);
RcppExport SEXP _StatComp20081_ILS(SEXP XSEXP, SEXP A_initSEXP, SEXP B_initSEXP, SEXP max_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A_init(A_initSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B_init(B_initSEXP);
    Rcpp::traits::input_parameter< int >::type max_iters(max_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(ILS(X, A_init, B_init, max_iters));
    return rcpp_result_gen;
END_RCPP
}
// MLE
extern "C" SEXP MLE(arma::mat A_init, arma::mat B_init, arma::mat sigmar_init, arma::mat sigmac_init, arma::cube X, int max_iters);
RcppExport SEXP _StatComp20081_MLE(SEXP A_initSEXP, SEXP B_initSEXP, SEXP sigmar_initSEXP, SEXP sigmac_initSEXP, SEXP XSEXP, SEXP max_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A_init(A_initSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B_init(B_initSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigmar_init(sigmar_initSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigmac_init(sigmac_initSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type max_iters(max_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(MLE(A_init, B_init, sigmar_init, sigmac_init, X, max_iters));
    return rcpp_result_gen;
END_RCPP
}
// PROJ
extern "C" SEXP PROJ(arma::cube X);
RcppExport SEXP _StatComp20081_PROJ(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(PROJ(X));
    return rcpp_result_gen;
END_RCPP
}
// VAR
RcppExport SEXP VAR(arma::cube X);
RcppExport SEXP _StatComp20081_VAR(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(VAR(X));
    return rcpp_result_gen;
END_RCPP
}
// metric
extern "C" SEXP metric(arma::mat BAHK, arma::mat B, arma::mat A);
RcppExport SEXP _StatComp20081_metric(SEXP BAHKSEXP, SEXP BSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type BAHK(BAHKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(metric(BAHK, B, A));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StatComp20081_ILS", (DL_FUNC) &_StatComp20081_ILS, 4},
    {"_StatComp20081_MLE", (DL_FUNC) &_StatComp20081_MLE, 6},
    {"_StatComp20081_PROJ", (DL_FUNC) &_StatComp20081_PROJ, 1},
    {"_StatComp20081_VAR", (DL_FUNC) &_StatComp20081_VAR, 1},
    {"_StatComp20081_metric", (DL_FUNC) &_StatComp20081_metric, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_StatComp20081(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
